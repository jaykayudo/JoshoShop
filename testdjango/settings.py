"""
Django settings for testdjango project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import core
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#*dc*zrs#57t&0a)$10$#(cu62_v!d3!-s=7ie)cw$r1awj9a-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['joshudo.com','localhost','127.0.0.1']


# Application definition

SITE_ID = 1 # for sitemaps and social auth

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sitemaps', # for adding sitemaps
    'django.contrib.postgres', # for using postgres specifc fields and aggregate functions
    
    # third parties
    'django_filters',
    "rolepermissions",
    "taggit",
    "social_django",
    'django_extensions',
    'crispy_forms',
    "crispy_bootstrap5",
    "rosetta",

    #local
    'core.apps.CoreConfig',
    'elearn.apps.ElearnConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'testdjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.cart', # custom added context processor
                'core.context_processors.favourites', # custom added context processor
                'core.context_processors.categories', # custom added context processor
                'core.context_processors.unread_messages', # custom added context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'testdjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES = { 
#     'default': {
#     'ENGINE': 'django.db.backends.postgresql', 
#     'NAME': 'test',
#     'USER': 'postgres',
#     'PASSWORD': 'jaykayudo',
#     'PORT':5432
#         } 
# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', 
    'core.authentication.EmailAuthBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('en', _('English')), 
    ('es', _('Spanish')), 
]

LOCALE_PATHS = [
    BASE_DIR / 'locale'
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
IMPORT_IMAGES_DIR = BASE_DIR / 'product_images'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '380808054823-dplfad99ei3jdib5onneevhqfdm9ft06.apps.googleusercontent.com' # Google Client ID 
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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' # Google Client Secret

# CRISPY_TEMPLATE_PACK = 'uni_form' # for crispy forms

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

LOGIN_URL = "/login"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/login"

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',

    # post pipeline action added locally
    'core.authentication.create_wallet',
)

CART_SESSION_ID = "cart" # custom added

PAYSTACK_SECRET_KEY= "sk_test_0433acf3d2150dfdb92abe3674f7645a3b3d3e9f"
PAYSTACK_PUBLIC_KEY = "pk_test_4633bc9f5efb7428e6b83063d3d92c0a590ddeb9"

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

REDIS_HOST = "localhost"
REDIS_PORT = 6379
REDIS_DB = 1